package odyssey;

import java.util.Scanner;

public class JavaOdyssey {
    static final Scanner scanner = new Scanner(System.in);

    // Statuts de v√©rification
    public static final int SUCCESS = 1;
    public static final int WRONG   = 0;
    public static final int RESTART = -1;

    // Param√®tres du jeu
    static int erreursMax = 2;   // 2 erreurs cons√©cutives d√©clenchent un restart
    static int viesMax    = 3;   // nombre de vies au d√©part

    // √âtat courant
    static int score = 0;
    static int erreursConsecutives = 0;
    static int vies = viesMax;   // ‚úÖ variable manquante ajout√©e

    public static void main(String[] args) {
        vies = viesMax;

        while (true) {
            boolean termine = startGame();       // joue l‚Äôodyss√©e compl√®te
            if (termine) break;                  // gagn√© : on sort !

            // Sinon: restart demand√© (2 erreurs cons√©cutives sur une √Æle)
            vies--;
            if (vies <= 0) {
                System.out.println("üíÄ GAME OVER : tu n‚Äôas plus de vies.");
                System.out.println("‚û°Ô∏è  Relance le programme pour retenter l‚Äôodyss√©e !");
                break;
            } else {
                System.out.println("‚ù§Ô∏è  Tu perds 1 vie. Vies restantes : " + afficherVies());
                System.out.println("üîÅ Reprise au d√©but de l‚Äôodyss√©e...\n");
            }
        }
    }

    public static boolean startGame() {
        score = 0;                  // on repart du d√©but : score remis √† 0
        erreursConsecutives = 0;

        System.out.println("üåç Bienvenue dans Java Odyssey !\n");
        System.out.println("Pars √† l‚Äôaventure et d√©couvre les myst√®res du langage Java.");
        System.out.println("Nombre de Vies : " + afficherVies() + "   (2 erreurs d‚Äôaffil√©e = -1 vie)\n");

        if (!IleVariables.jouer(scanner)) return false; else score += 10;
        if (!IleConditions.jouer(scanner)) return false; else score += 10;
        if (!IleBoucles.jouer(scanner))   return false; else score += 10;
        if (!IleMethodes.jouer(scanner))  return false; else score += 10;
        if (!IlePOO.jouer(scanner))       return false; else score += 10;

        System.out.println("üéâ F√©licitations, explorateur ! Tu as termin√© Java Odyssey !");
        System.out.println("‚ú® Ton score final : " + score + " points");
        return true; // fin normale
    }

    /** V√©rifie la r√©ponse de l'√Æle courante : SUCCESS / WRONG / RESTART */
    public static int verifierReponse(String reponse, String[] motsAttendus) {
        for (String mot : motsAttendus) {
            if (!reponse.contains(mot)) {
                erreursConsecutives++;
                if (erreursConsecutives >= erreursMax) {
                    System.out.println("üí• 2 erreurs d‚Äôaffil√©e !");
                    // On NE d√©cr√©mente PAS ici les vies : c‚Äôest g√©r√© dans main() apr√®s le retour false.
                    return RESTART;
                }
                System.out.println("‚û°Ô∏è Attention : encore une erreur possible avant de perdre 1 vie.\n");
                return WRONG;
            }
        }
        // Succ√®s : on remet le compteur d‚Äôerreurs
        erreursConsecutives = 0;
        return SUCCESS;
    }

    /** Repr√©sentation des vies restantes en c≈ìurs (‚ô•) */
    public static String afficherVies() {   // ‚ö° pass√© en public pour que les √Æles y acc√®dent
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < vies; i++) sb.append("‚ô•");
        for (int i = vies; i < viesMax; i++) sb.append("‚ô°");
        return sb.toString();
    }
}
